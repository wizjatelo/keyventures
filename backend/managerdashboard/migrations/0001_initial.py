# Generated by Django 5.2.3 on 2025-07-31 12:13

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Inventory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('product_id', models.IntegerField()),
                ('variant_id', models.IntegerField()),
                ('quantity', models.IntegerField(default=0)),
                ('reserved_quantity', models.IntegerField(default=0)),
                ('min_stock_level', models.IntegerField(default=0)),
                ('max_stock_level', models.IntegerField(default=0)),
                ('reorder_point', models.IntegerField(default=0)),
                ('last_updated', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='ApprovalRequest',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type', models.CharField(choices=[('transaction_void', 'Transaction Void'), ('discount_approval', 'Discount Approval'), ('return_approval', 'Return Approval'), ('inventory_transfer', 'Inventory Transfer')], max_length=20)),
                ('target_id', models.IntegerField()),
                ('status', models.CharField(default='pending', max_length=20)),
                ('comment', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('resolved_at', models.DateTimeField(blank=True, null=True)),
                ('manager', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='requests_handled', to=settings.AUTH_USER_MODEL)),
                ('requestor', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='requests_made', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='AuditLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('action_type', models.CharField(max_length=50)),
                ('target', models.CharField(max_length=100)),
                ('metadata', models.JSONField(default=dict)),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('source_ip', models.GenericIPAddressField(null=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Manager',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('role', models.CharField(choices=[('store_manager', 'Store Manager'), ('area_manager', 'Area Manager'), ('admin', 'Admin')], max_length=20)),
                ('permissions', models.JSONField(default=dict)),
                ('last_login', models.DateTimeField(blank=True, null=True)),
                ('timezone', models.CharField(default='UTC', max_length=50)),
                ('preferred_language', models.CharField(default='en', max_length=10)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='ReportConfig',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('metrics', models.JSONField(default=list)),
                ('filters', models.JSONField(default=dict)),
                ('schedule', models.CharField(blank=True, max_length=50)),
                ('export_format', models.CharField(default='pdf', max_length=10)),
                ('last_run', models.DateTimeField(blank=True, null=True)),
                ('manager', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='managerdashboard.manager')),
            ],
        ),
        migrations.CreateModel(
            name='Store',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('code', models.CharField(max_length=10, unique=True)),
                ('location', models.CharField(max_length=100)),
                ('address', models.TextField()),
                ('phone', models.CharField(max_length=20)),
                ('email', models.EmailField(max_length=254)),
                ('timezone', models.CharField(default='UTC', max_length=50)),
                ('tax_rate', models.DecimalField(decimal_places=2, default=0.0, max_digits=5)),
                ('currency', models.CharField(default='USD', max_length=3)),
                ('status', models.CharField(default='active', max_length=20)),
                ('operating_hours', models.JSONField(default=dict)),
                ('inventory', models.ManyToManyField(related_name='associated_stores', to='managerdashboard.inventory')),
                ('managers', models.ManyToManyField(related_name='managed_stores_list', to='managerdashboard.manager')),
                ('staff', models.ManyToManyField(related_name='stores_as_staff', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.AddField(
            model_name='manager',
            name='managed_stores',
            field=models.ManyToManyField(to='managerdashboard.store'),
        ),
        migrations.AddField(
            model_name='inventory',
            name='store',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='inventories', to='managerdashboard.store'),
        ),
        migrations.CreateModel(
            name='Transaction',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('receipt_number', models.CharField(max_length=20, unique=True)),
                ('order_id', models.IntegerField(blank=True, null=True)),
                ('subtotal', models.DecimalField(decimal_places=2, max_digits=10)),
                ('tax_amount', models.DecimalField(decimal_places=2, max_digits=10)),
                ('total', models.DecimalField(decimal_places=2, max_digits=10)),
                ('payment_method', models.CharField(max_length=20)),
                ('status', models.CharField(max_length=20)),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('is_offline', models.BooleanField(default=False)),
                ('sync_status', models.CharField(default='pending', max_length=20)),
                ('cashier', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='cashier_transactions', to=settings.AUTH_USER_MODEL)),
                ('customer', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='customer_transactions', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.AddField(
            model_name='store',
            name='transactions',
            field=models.ManyToManyField(related_name='related_stores', to='managerdashboard.transaction'),
        ),
    ]
